{"version":3,"sources":["webpack:///ClientApp/app/shop/productList.component.ts","webpack:///ClientApp/app/shop/productList.component.html","webpack:///ClientApp/app/checkout/checkout.component.ts","webpack:///ClientApp/app/checkout/checkout.component.html","webpack:///ClientApp/environments/environment.ts","webpack:///ClientApp/app/app.component.ts","webpack:///ClientApp/app/app.component.html","webpack:///ClientApp/app/app.module.ts","webpack:///ClientApp/app/shared/order.ts","webpack:///ClientApp/main.ts","webpack:///ClientApp/app/shop/shop.component.ts","webpack:///ClientApp/app/shop/shop.component.html","webpack:///ClientApp/app/login/login.component.ts","webpack:///ClientApp/app/login/login.component.html","webpack:///ClientApp/app/shared/dataService.ts","webpack:///ClientApp/app/shop/cart.component.ts","webpack:///ClientApp/app/shop/cart.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ProductList","data","products","loadProducts","subscribe","success","product","AddToOrder","selector","templateUrl","styleUrls","Checkout","router","errorMessage","checkout","navigate","error","onCheckout","environment","production","AppComponent","styles","routes","path","component","AppModule","forRoot","useHash","enableTracing","declarations","imports","providers","bootstrap","Order","orderDate","Date","items","Array","item","unitPrice","quantity","OrderItem","bootstrapModule","err","console","Shop","Login","credentials","username","password","login","order","length","onLogin","DataService","http","token","get","pipe","post","tokenExpiration","orderNumber","getFullYear","toString","getTime","headers","set","response","find","productId","id","productArtist","artist","productArtId","artId","productCategory","category","productSize","size","productTitle","title","price","push","Cart","loginRequired","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { Product } from '../shared/product';\r\n\r\n@Component({\r\n    selector: 'product-list',\r\n    templateUrl: 'productList.component.html',\r\n    styleUrls: [ 'productList.component.css' ]\r\n})\r\nexport class ProductList implements OnInit {\r\n    constructor(private data: DataService) {\r\n        this.products = data.products;\r\n    }\r\n\r\n    public products: Product[] = [];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.data.products;\r\n                }\r\n            });\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.data.AddToOrder(product);\r\n    }\r\n}","<div class=\"row\">\r\n    <div class=\"productInfo col-md-4 well well-sm\" *ngFor=\"let product of products\">\r\n        <div class=\"card bg-light p-1 m-1\">\r\n            <img src=\"/img/{{ product.artId }}.jpg\" class=\"img-responsive\" [alt]=\"product.title\" />\r\n            <div class=\"productName\">{{ product.category }} - {{ product.size }}</div>\r\n            <div><strong>Price</strong>: {{ product.price | currency:\"USD\":\"symbol\" }}</div>\r\n            <div><strong>Artist</strong>: {{ product.artist }}</div>\r\n            <div><strong>Title</strong>: {{ product.title }}</div>\r\n            <div><strong>Description</strong>: {{ product.artDescription }}</div>\r\n            <button id=\"buyButton\" class=\"btn btn-success btn-sm pull-right\" (click)=\"addProduct(product)\">Buy</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from \"@angular/core\";\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../shared/dataService';\n\n@Component({\n  selector: \"checkout\",\n  templateUrl: \"checkout.component.html\",\n  styleUrls: ['checkout.component.css']\n})\nexport class Checkout {\n    constructor(public data: DataService, public router: Router) { }\n\n    errorMessage: string = \"\";\n\n    onCheckout() {\n        this.data.checkout()\n            .subscribe(success => {\n                if (success) {\n                    this.router.navigate([\"\"]);\r\n                }\n            }, error => this.errorMessage = \"Failed to save order\");\n    }\n}","<div class=\"row\">\n  <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\n  <h3>Confirm Order</h3>\n  <table class=\"table table-bordered table-hover\">\n    <tr *ngFor=\"let o of data.order.items\">\n      <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\n      <td>{{ o.quantity }}</td>\n      <td>{{ o.unitPrice|currency:'USD':\"symbol\" }}</td>\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':\"symbol\" }}</td>\n    </tr>\n  </table>\n  <div class=\"col-md-4 col-md-offset-8 text-right\">\n    <table class=\"table table-condensed\">\n      <tr>\n        <td class=\"text-right\">Subtotal</td>\n        <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':\"symbol\" }}</td>\n      </tr>\n      <tr>\n        <td class=\"text-right\">Shipping</td>\n        <td class=\"text-right\">$ 0.00</td>\n      </tr>\n      <tr>\n        <td class=\"text-right\">Total:</td>\n        <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':\"symbol\" }}</td>\n      </tr>\n    </table>\n    <button class=\"btn btn-success\" (click)=\"onCheckout()\">Complete Purchase</button>\n    <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\n  </div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProductList } from './shop/productList.component';\r\nimport { Cart } from './shop/cart.component';\r\nimport { Shop } from './shop/shop.component';\r\nimport { Checkout } from './checkout/checkout.component';\r\nimport { Login } from './login/login.component';\r\nimport { DataService } from './shared/dataService';\r\n\r\nlet routes = [\r\n    { path: \"\", component: Shop },\r\n    { path: \"checkout\", component: Checkout },\r\n    { path: \"login\", component: Login }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n        AppComponent,\r\n        ProductList,\r\n        Cart,\r\n        Shop,\r\n        Checkout,\r\n        Login\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      RouterModule.forRoot(routes, {\r\n          useHash: true,\r\n          enableTracing: false\r\n      })\r\n  ],\r\n    providers: [\r\n        DataService\r\n    ],\r\n    bootstrap: [\r\n        AppComponent\r\n    ]\r\n})\r\nexport class AppModule { }\r\n","import * as _ from 'lodash-es';\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, item => item.unitPrice * item.quantity));\r\n    };\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'shop',\r\n    templateUrl: 'shop.component.html'\r\n})\r\nexport class Shop {}","<div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <div class=\"card bg-light p-2\">\r\n            <the-cart></the-cart>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../shared/dataService';\r\n\r\n@Component({\r\n    selector: 'login',\r\n    templateUrl: 'login.component.html'\r\n})\r\nexport class Login {\r\n    constructor(private data: DataService, private router: Router) { }\r\n\r\n    errorMessage: string = \"\";\r\n\r\n    public credentials = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    onLogin() {\r\n        this.data.login(this.credentials)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    if (this.data.order.items.length == 0) {\r\n                        this.router.navigate(['']);\r\n                    } else {\r\n                        this.router.navigate(['checkout']);\r\n                    }\r\n                }\r\n            }, error => this.errorMessage = 'Failed to login');\r\n    }\r\n}","<div class=\"row\">\n  <div class=\"col-md-4 col-md-offset-4\">\n    <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\n    <form (submit)=\"onLogin()\" #theForm=\"ngForm\" novalidate>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"credentials.username\" #username=\"ngModel\" required />\n        <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\">Username is required!</div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"credentials.password\" #password=\"ngModel\" required />\n        <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required\">Password is required!</div>\n      </div>\n      <div class=\"form-group\">\n        <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"theForm.invalid\" />\n        <a routerLink=\"/\" class=\"btn btn-default\">Cancel</a>\n      </div>\n    </form>\n  </div>\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Order, OrderItem } from './order';\r\nimport { Product } from './product';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    private token: string = '';\r\n    private tokenExpiration: Date;\r\n\r\n    public order: Order = new Order();\r\n\r\n    public products: Product[] = [];\r\n\r\n    loadProducts(): Observable<boolean> {\r\n        return this.http\r\n            .get('/api/products')\r\n            .pipe(map((data: any[]) => {\r\n               this.products = data;\r\n               return true;\r\n            }));\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n    }\r\n\r\n    login(credentials): Observable<boolean> {\r\n        return this.http\r\n            .post(\"/account/createtoken\", credentials)\r\n            .pipe(map((data: any) => {\r\n               this.token = data.token;\r\n               this.tokenExpiration = data.tokenExpiration;\r\n               return true;\r\n            }));\r\n    }\r\n\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n        }\r\n\r\n        return this.http\r\n            .post(\"/api/orders\", this.order, {\r\n                headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\r\n            })\r\n            .pipe(map(response => {\r\n               this.order = new Order();\r\n               return true;\r\n            }));\r\n    }\r\n\r\n    public AddToOrder(product: Product) {\r\n        var item: OrderItem = this.order.items.find(item => item.productId == product.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        } else {\r\n            item = new OrderItem();\r\n\r\n            item.productId = product.id;\r\n            item.productArtist = product.artist;\r\n            item.productArtId = product.artId;\r\n            item.productCategory = product.category;\r\n            item.productSize = product.size;\r\n            item.productTitle = product.title;\r\n            item.unitPrice = product.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../shared/dataService';\r\n\r\n@Component({\r\n    selector: 'the-cart',\r\n    templateUrl: 'cart.component.html',\r\n    styleUrls: []\r\n})\r\nexport class Cart {\r\n    constructor(public data: DataService, private router: Router) { }\r\n\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            this.router.navigate(['login']);\r\n        } else {\r\n            this.router.navigate(['checkout']);\r\n        }\r\n    }\r\n}","<h3>Shopping Cart</h3>\r\n<div>#/Items: {{ data.order.items.length }}</div>\r\n<div>Subtotal: {{ data.order.subtotal | currency: \"USD\":\"symbol\" }}</div>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n    <thead>\r\n        <tr>\r\n            <td>Product</td>\r\n            <td>#</td>\r\n            <td>$</td>\r\n            <td>Total</td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let item of data.order.items\">\r\n            <td>{{ item.productCategory }} - {{ item.productTitle }}</td>\r\n            <td>{{ item.quantity }}</td>\r\n            <td>{{ item.unitPrice | currency: \"USD\":\"symbol\" }}</td>\r\n            <td>{{ (item.unitPrice * item.quantity) | currency: \"USD\":\"symbol\" }}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<button class=\"btn btn-success\" *ngIf=\"data.order.items.length > 0\" (click)=\"onCheckout()\">Checkout</button>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}